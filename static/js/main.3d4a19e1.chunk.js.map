{"version":3,"sources":["components/Timer/TimerDisplay.jsx","components/Timer/Timer.jsx","components/Countdown/CountdownDisplay.jsx","components/Countdown/CountdownInputSlider.jsx","components/Countdown/CountdownInputMinutes.jsx","components/Countdown/CountdownInputSeconds.jsx","components/Countdown/CountdownInputBlock.jsx","components/Countdown/CountdownProgress.jsx","components/Countdown/Countdown.jsx","components/Clock/ClockDisplay.jsx","components/Clock/Clock.jsx","App.jsx","index.jsx"],"names":["ClockDisplay","props","currentTime","className","Timer","state","hour","minute","second","millisecond","isPaused","handleStart","setState","timerID","setTimeout","tick","clearTimeout","handleReset","clearInterval","this","time","split","slice","join","type","onClick","React","Component","CountdownDisplay","minutes","seconds","CountdownSlider","onChange","value","changeValueFromSlider","isDisabled","min","max","step","disabled","InputMinutes","isNaN","changeMinutes","style","margin","InputSeconds","changeSeconds","CountdownInputBlock","valueInputMinutes","valueInputSeconds","valueSlider","CountdownProgress","percentTime","percent","Countdown","totalTime","isFinish","displayMinValue","toString","displaySecValue","changeValueMin","changeValueSec","Math","floor","calculateTimeProcent","ceil","pauseOn","pauseOff","playAudio","audio","Audio","preload","src","play","valueDisplayMinutes","valueDisplaySeconds","currentMs","Clock","Date","setInterval","newTime","ms","getMilliseconds","toLocaleTimeString","App","TabPane","Tabs","tab","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d4a19e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TimerDisplay.css';\r\n\r\nexport default function ClockDisplay(props) {\r\n  const { currentTime } = props;\r\n  return (\r\n    <div className=\"timerDisplayWrapper\">\r\n      <div className=\"class1\">\r\n        <h1>Секундомер</h1>\r\n        <h1>{currentTime}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nClockDisplay.propTypes = {\r\n  currentTime: PropTypes.string,\r\n};\r\n","import React from 'react';\r\n\r\nimport './Timer.css';\r\nimport { Button } from 'antd';\r\nimport TimerDisplay from './TimerDisplay';\r\n\r\nexport default class Timer extends React.Component {\r\n  state = {\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    millisecond: 0,\r\n    isPaused: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    if (this.state.isPaused) {\r\n      clearTimeout(this.timerID);\r\n      return;\r\n    }\r\n    this.setState({\r\n      millisecond: this.state.millisecond + 17,\r\n    });\r\n    if (this.state.millisecond >= 1000) {\r\n      this.setState({\r\n        second: this.state.second + 1,\r\n        millisecond: 0,\r\n      });\r\n    }\r\n    if (this.state.second === 60) {\r\n      this.setState({\r\n        minute: this.state.minute + 1,\r\n        second: 0,\r\n      });\r\n    }\r\n    if (this.state.minute === 60) {\r\n      this.setState({\r\n        hour: this.state.hour + 1,\r\n        minute: 0,\r\n      });\r\n    }\r\n    this.timerID = setTimeout(() => this.tick(), 17);\r\n  }\r\n\r\n  handleStart = () => {\r\n    if (this.state.isPaused) {\r\n      this.setState({\r\n        isPaused: false,\r\n      });\r\n      this.timerID = setTimeout(() => this.tick(), 17);\r\n    } else {\r\n      clearTimeout(this.timerID);\r\n      this.setState({\r\n        isPaused: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n      millisecond: 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { hour, minute, second, millisecond } = this.state;\r\n    const time =\r\n      ('0' + hour).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('0' + minute).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('0' + second).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('00' + millisecond).split('').slice(-3).join('');\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <TimerDisplay currentTime={time} />\r\n        <div className=\"btn-container\">\r\n          <div className=\"btn\">\r\n            <Button type=\"primary\" onClick={this.handleStart}>\r\n              Пуск/пауза\r\n            </Button>\r\n          </div>\r\n          <div className=\"btn\">\r\n            <Button type=\"primary\" onClick={this.handleReset}>\r\n              Сбросить\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './CountdownDisplay.css';\r\n\r\nexport default function CountdownDisplay(props) {\r\n  const { minutes, seconds } = props;\r\n\r\n  return (\r\n    <div className=\"countdownDisplayWrapper\">\r\n      <div className=\"class1\">\r\n        <h1>\r\n          {minutes}:{seconds}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCountdownDisplay.propTypes = {\r\n  minutes: PropTypes.string,\r\n  seconds: PropTypes.string,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './CountdownInputSlider.css';\r\nimport { Slider } from 'antd';\r\n\r\nexport class CountdownSlider extends React.Component {\r\n  onChange = (value) => {\r\n    const { changeValueFromSlider } = this.props;\r\n    changeValueFromSlider(value);\r\n  };\r\n\r\n  render() {\r\n    const { isDisabled, value } = this.props;\r\n    return (\r\n      <Slider\r\n        min={0}\r\n        max={43200}\r\n        step={15}\r\n        value={value}\r\n        onChange={this.onChange}\r\n        disabled={isDisabled}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCountdownSlider.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n  value: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './CountdownInputMinutes.css';\r\nimport { InputNumber, Row } from 'antd';\r\n\r\nexport class InputMinutes extends React.Component {\r\n    onChange = (value) => {\r\n      if (isNaN(value)) {\r\n        return;\r\n      }\r\n      const { changeMinutes } = this.props;\r\n      changeMinutes(value);\r\n    };\r\n  \r\n    render() {\r\n      const { isDisabled, value } = this.props;\r\n      return (\r\n        <Row>\r\n          <InputNumber\r\n            min={0}\r\n            max={720}\r\n            style={{ margin: '0 16px' }}\r\n            value={value}\r\n            onChange={this.onChange}\r\n            step={1}\r\n            disabled={isDisabled}\r\n          />\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n  \r\n  InputMinutes.propTypes = {\r\n    isDisabled: PropTypes.bool,\r\n    value: PropTypes.number,\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './CountdownInputSeconds.css';\r\nimport { InputNumber, Row } from 'antd';\r\n\r\nexport class InputSeconds extends React.Component {\r\n    onChange = (value) => {\r\n      if (isNaN(value)) {\r\n        return;\r\n      }\r\n      const { changeSeconds } = this.props;\r\n      changeSeconds(value);\r\n    };\r\n  \r\n    render() {\r\n      const { isDisabled, value } = this.props;\r\n      return (\r\n        <Row>\r\n          <InputNumber\r\n            min={0}\r\n            max={60}\r\n            style={{ margin: '0 16px' }}\r\n            step={1}\r\n            value={value}\r\n            onChange={this.onChange}\r\n            disabled={isDisabled}\r\n          />\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n  \r\n  InputSeconds.propTypes = {\r\n    isDisabled: PropTypes.bool,\r\n    value: PropTypes.number,\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './CountdownInputBlock.css';\r\nimport { CountdownSlider } from './CountdownInputSlider';\r\nimport { InputMinutes } from './CountdownInputMinutes';\r\nimport { InputSeconds } from './CountdownInputSeconds';\r\n\r\nexport default function CountdownInputBlock(props) {\r\n  const {\r\n    changeMinutes,\r\n    changeSeconds,\r\n    changeValueFromSlider,\r\n    valueInputMinutes,\r\n    valueInputSeconds,\r\n    isDisabled,\r\n    valueSlider,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"input-block__wrapper\">\r\n      <div>\r\n        <CountdownSlider\r\n          changeValueFromSlider={changeValueFromSlider}\r\n          value={valueSlider}\r\n          isDisabled={isDisabled}\r\n        />\r\n      </div>\r\n      <div className=\"input-minutes__container\">\r\n        <span className=\"input-minutes__label\">Минуты:</span>\r\n        <div className=\"input-minutes\">\r\n          <InputMinutes\r\n            changeMinutes={changeMinutes}\r\n            value={valueInputMinutes}\r\n            isDisabled={isDisabled}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-seconds__container\">\r\n        <span className=\"input-seconds__label\">Секунды:</span>\r\n        <div className=\"input-seconds\">\r\n          <InputSeconds\r\n            changeSeconds={changeSeconds}\r\n            value={valueInputSeconds}\r\n            isDisabled={isDisabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCountdownInputBlock.propTypes = {\r\n  changeMinutes: PropTypes.func,\r\n  changeSeconds: PropTypes.func,\r\n  changeValueFromSlider: PropTypes.func,\r\n  valueInputMinutes: PropTypes.number,\r\n  valueInputSeconds: PropTypes.number,\r\n  isDisabled: PropTypes.bool,\r\n  valueSlider: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport { Progress } from 'antd';\r\n\r\nexport default function CountdownProgress(props) {\r\n  const { percentTime } = props;\r\n  return <Progress type=\"circle\" percent={percentTime} />;\r\n}\r\n\r\nCountdownProgress.propTypes = {\r\n  percentTime: propTypes.number,\r\n};\r\n","import React from 'react';\r\n\r\nimport './Countdown.css';\r\nimport { Button } from 'antd';\r\nimport CountdownDisplay from './CountdownDisplay';\r\nimport CountdownInputBlock from './CountdownInputBlock';\r\nimport CountdownProgress from './CountdownProgress';\r\n\r\nexport default class Countdown extends React.Component {\r\n  state = {\r\n    minutes: 0,\r\n    seconds: 0,\r\n    totalTime: 0,\r\n    percentTime: 0,\r\n    isPaused: true,\r\n    isDisabled: false,\r\n    isFinish: true,\r\n  };\r\n\r\n  displayMinValue = (value) => {\r\n    return ('00' + value.toString()).split('').slice(-3).join('');\r\n  };\r\n\r\n  displaySecValue = (value) => {\r\n    return ('0' + value.toString()).split('').slice(-2).join('');\r\n  };\r\n\r\n  changeValueMin = (minutes) => {\r\n    this.setState({\r\n      minutes,\r\n    });\r\n  };\r\n\r\n  changeValueSec = (seconds) => {\r\n    this.setState({\r\n      seconds,\r\n    });\r\n  };\r\n\r\n  changeValueFromSlider = (value) => {\r\n    const minutes = Math.floor(value / 60);\r\n    const seconds = value % 60;\r\n    this.setState({\r\n      minutes,\r\n      seconds,\r\n    });\r\n  };\r\n\r\n  calculateTimeProcent = () => {\r\n    const { totalTime, minutes, seconds } = this.state;\r\n    const currentTime = minutes * 60 + seconds;\r\n    const percentTime = Math.ceil(100 - (currentTime * 100) / totalTime);\r\n    this.setState({\r\n      percentTime,\r\n    });\r\n  };\r\n\r\n  pauseOn = () => {\r\n    clearTimeout(this.timerID);\r\n    this.setState({\r\n      isPaused: true,\r\n    });\r\n  };\r\n\r\n  pauseOff = () => {\r\n    this.setState({\r\n      isPaused: false,\r\n    });\r\n  };\r\n\r\n  playAudio = () => {\r\n    var audio = new Audio();\r\n    audio.preload = 'auto';\r\n    audio.src =\r\n      'https://interactive-examples.mdn.mozilla.net/media/examples/t-rex-roar.mp3';\r\n    audio.play();\r\n  };\r\n\r\n  handleStart = () => {\r\n    const { isFinish, isPaused, minutes, seconds } = this.state;\r\n    switch (isFinish) {\r\n      case true:\r\n        if (isPaused) {\r\n          const totalTime = minutes * 60 + seconds;\r\n          this.setState({\r\n            totalTime,\r\n            isDisabled: true,\r\n            isPaused: false,\r\n            isFinish: false,\r\n          });\r\n          this.timerID = setTimeout(() => this.tick(), 1000);\r\n        } else {\r\n          this.pauseOn();\r\n        }\r\n        break;\r\n      case false:\r\n        if (isPaused) {\r\n          this.pauseOff();\r\n          this.timerID = setTimeout(() => this.tick(), 1000);\r\n        } else {\r\n          this.pauseOn();\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  tick = () => {\r\n    const { isPaused, minutes, seconds } = this.state;\r\n\r\n    this.calculateTimeProcent();\r\n\r\n    if (isPaused) {\r\n      clearTimeout(this.timerID);\r\n      return;\r\n    }\r\n\r\n    if (minutes === 0 && seconds === 0) {\r\n      clearTimeout(this.timerID);\r\n      this.setState({\r\n        isPaused: true,\r\n        isDisabled: false,\r\n        isFinish: true,\r\n      });\r\n      this.playAudio();\r\n      return;\r\n    }\r\n\r\n    if (seconds === 0) {\r\n      this.setState({\r\n        seconds: 60,\r\n        minutes: this.state.minutes - 1,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      seconds: this.state.seconds - 1,\r\n    });\r\n\r\n    this.timerID = setTimeout(this.tick, 1000);\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      minutes: 0,\r\n      seconds: 0,\r\n      totalTime: 0,\r\n      percentTime: 0,\r\n      isPaused: true,\r\n      isDisabled: false,\r\n      isFinish: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { percentTime, isDisabled } = this.state;\r\n    const valueInputMinutes = this.state.minutes;\r\n    const valueInputSeconds = this.state.seconds;\r\n    const valueSlider = valueInputMinutes * 60 + valueInputSeconds;\r\n    const valueDisplayMinutes = this.displayMinValue(this.state.minutes);\r\n    const valueDisplaySeconds = this.displaySecValue(this.state.seconds);\r\n\r\n    return (\r\n      <div className=\"Countdown-container\">\r\n        <h1>Счетчик обратного времени</h1>\r\n        <div className=\"display-progress-container\">\r\n          <div className=\"diasplay-progress-flex-box\">\r\n            <CountdownDisplay\r\n              minutes={valueDisplayMinutes}\r\n              seconds={valueDisplaySeconds}\r\n            />\r\n          </div>\r\n          <div className=\"diasplay-progress-flex-box\">\r\n            <CountdownProgress percentTime={percentTime} />\r\n          </div>\r\n        </div>\r\n        <div className=\"InputField-buttons-container\">\r\n          <div className=\"InputField-container\">\r\n            <CountdownInputBlock\r\n              changeValueFromSlider={this.changeValueFromSlider}\r\n              changeMinutes={this.changeValueMin}\r\n              changeSeconds={this.changeValueSec}\r\n              valueInputMinutes={valueInputMinutes}\r\n              valueInputSeconds={valueInputSeconds}\r\n              valueSlider={valueSlider}\r\n              isDisabled={isDisabled}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"btn-container\">\r\n            <div className=\"btn\">\r\n              <Button type=\"primary\" onClick={this.handleStart}>\r\n                Пуск/пауза\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn\">\r\n              <Button type=\"primary\" onClick={this.handleReset}>\r\n              &nbsp;&nbsp;Сбросить&nbsp;\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ClockDisplay.css';\r\n\r\nexport default function ClockDisplay(props) {\r\n  const { currentTime, currentMs } = props;\r\n  return (\r\n    <>\r\n      <h1>Текущее время</h1>\r\n      <div className=\"timerDisplayWrapper\">\r\n        <div className=\"class1\">\r\n          <h1>{currentTime}:</h1>\r\n        </div>\r\n        <div className=\"class2\">\r\n          <h1>{currentMs}</h1>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nClockDisplay.propTypes = {\r\n  currentTime: PropTypes.string,\r\n  currentMs: PropTypes.string,\r\n};\r\n","import React from 'react';\r\n\r\nimport './Clock.css';\r\nimport ClockDisplay from './ClockDisplay';\r\n\r\nexport default class Clock extends React.Component {\r\n  state = {\r\n    currentTime: new Date(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 17);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    const newTime = new Date();\r\n    this.setState({\r\n      currentTime: newTime,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { currentTime } = this.state;\r\n    const ms = ('00' + currentTime.getMilliseconds().toString())\r\n      .split('')\r\n      .slice(-3)\r\n      .join('');\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <ClockDisplay\r\n          currentTime={currentTime.toLocaleTimeString()}\r\n          currentMs={ms}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Timer from './components/Timer/Timer';\r\nimport Countdown from './components/Countdown/Countdown';\r\nimport Clock from './components/Clock/Clock';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>Таймеры</h1>\r\n      </header>\r\n      <div className=\"app\">\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"Часы\" key=\"1\">\r\n            <Clock />\r\n          </TabPane>\r\n          <TabPane tab=\"Секундомер\" key=\"2\">\r\n            <Timer />\r\n          </TabPane>\r\n          <TabPane tab=\"Счетчик обратного времени\" key=\"3\">\r\n            <Countdown />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}