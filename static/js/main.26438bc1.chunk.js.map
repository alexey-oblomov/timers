{"version":3,"sources":["components/Timer/TimerDisplay.jsx","components/Timer/Timer.jsx","components/Countdown/CountdownDisplay.jsx","components/Countdown/CountdownInputField.jsx","components/Countdown/CountdownProgress.jsx","components/Countdown/Countdown.jsx","components/Clock/ClockDisplay.jsx","components/Clock/Clock.jsx","App.jsx","index.jsx"],"names":["ClockDisplay","props","currentTime","className","Timer","state","hour","minute","second","millisecond","isPaused","handleStart","setState","timerID","setTimeout","tick","clearTimeout","handleReset","clearInterval","this","time","split","slice","join","type","onClick","React","Component","CountdownDisplay","min","sec","CountdownInputField","changeMinutes","changeSeconds","changeValueFromSlider","valueInputMinutes","valueInputSeconds","isDisabled","valueSlider","value","SliderTimer","onChange","max","step","disabled","Minutes","isNaN","style","margin","Seconds","percentTime","percent","Countdown","minutes","seconds","totalTime","isFinish","displayMinValue","toString","displaySecValue","changeValueMin","changeValueSec","Math","floor","valueDisplayMinutes","valueDisplaySeconds","CountdownProgress","currentMs","Clock","Date","setInterval","newTime","ms","getMilliseconds","toLocaleTimeString","App","TabPane","Tabs","tab","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26438bc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TimerDisplay.css';\r\n\r\nexport default function ClockDisplay(props) {\r\n  const { currentTime } = props;\r\n  return (\r\n    <div className=\"timerDisplayWrapper\">\r\n      <div className=\"class1\">\r\n        <h1>Секундомер</h1>\r\n        <h1>{currentTime}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './Timer.css';\r\nimport TimerDisplay from './TimerDisplay';\r\n\r\nexport default class Timer extends React.Component {\r\n  state = {\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    millisecond: 0,\r\n    isPaused: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    if (this.state.isPaused) {\r\n      clearTimeout(this.timerID);\r\n      return;\r\n    }\r\n    this.setState({\r\n      millisecond: this.state.millisecond + 17,\r\n    });\r\n    if (this.state.millisecond >= 1000) {\r\n      this.setState({\r\n        second: this.state.second + 1,\r\n        millisecond: 0,\r\n      });\r\n    }\r\n    if (this.state.second === 60) {\r\n      this.setState({\r\n        minute: this.state.minute + 1,\r\n        second: 0,\r\n      });\r\n    }\r\n    if (this.state.minute === 60) {\r\n      this.setState({\r\n        hour: this.state.hour + 1,\r\n        minute: 0,\r\n      });\r\n    }\r\n    this.timerID = setTimeout(() => this.tick(), 17);\r\n  }\r\n\r\n  handleStart = () => {\r\n    if (this.state.isPaused) {\r\n      this.setState({\r\n        isPaused: false,\r\n      });\r\n      this.timerID = setTimeout(() => this.tick(), 17);\r\n    } else {\r\n      clearTimeout(this.timerID);\r\n      this.setState({\r\n        isPaused: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n      millisecond: 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { hour, minute, second, millisecond } = this.state;\r\n    const time =\r\n      ('0' + hour).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('0' + minute).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('0' + second).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('00' + millisecond).split('').slice(-3).join('');\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <TimerDisplay currentTime={time} />\r\n        <div className=\"btn-container\">\r\n          <div className=\"btn\">\r\n            <Button type=\"primary\" onClick={this.handleStart}>\r\n              Пуск/пауза\r\n            </Button>\r\n          </div>\r\n          <div className=\"btn\">\r\n            <Button type=\"primary\" onClick={this.handleReset}>\r\n              Сбросить\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './CountdownDisplay.css';\r\n\r\nexport default function CountdownDisplay(props) {\r\n  const { min, sec } = props;\r\n\r\n  return (\r\n    <div className=\"countdownDisplayWrapper\">\r\n      <div className=\"class1\">\r\n        <h1>\r\n          {min}:{sec}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './CountdownInputField.css';\r\nimport React from 'react';\r\nimport { Slider, InputNumber, Row } from 'antd';\r\n\r\nexport default function CountdownInputField(props) {\r\n  const {\r\n    changeMinutes,\r\n    changeSeconds,\r\n    changeValueFromSlider,\r\n    valueInputMinutes,\r\n    valueInputSeconds,\r\n    isDisabled,\r\n    valueSlider,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <SliderTimer\r\n        changeValueFromSlider={changeValueFromSlider}\r\n        value={valueSlider}\r\n        isDisabled={isDisabled}\r\n      />\r\n      <Minutes\r\n        changeMinutes={changeMinutes}\r\n        value={valueInputMinutes}\r\n        isDisabled={isDisabled}\r\n      />\r\n      <Seconds\r\n        changeSeconds={changeSeconds}\r\n        value={valueInputSeconds}\r\n        isDisabled={isDisabled}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nclass SliderTimer extends React.Component {\r\n  onChange = (value) => {\r\n    const { changeValueFromSlider } = this.props;\r\n    changeValueFromSlider(value);\r\n  };\r\n\r\n  render() {\r\n    const { isDisabled, value } = this.props;\r\n    return (\r\n      <Slider\r\n        min={0}\r\n        max={43200}\r\n        step={15}\r\n        value={value}\r\n        onChange={this.onChange}\r\n        disabled={isDisabled}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass Minutes extends React.Component {\r\n  onChange = (value) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    const { changeMinutes } = this.props;\r\n    changeMinutes(value);\r\n  };\r\n\r\n  render() {\r\n    const { isDisabled, value } = this.props;\r\n    return (\r\n      <Row>\r\n        <InputNumber\r\n          min={0}\r\n          max={720}\r\n          style={{ margin: '0 16px' }}\r\n          value={value}\r\n          onChange={this.onChange}\r\n          step={1}\r\n          disabled={isDisabled}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nclass Seconds extends React.Component {\r\n  onChange = (value) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    const { changeSeconds } = this.props;\r\n    changeSeconds(value);\r\n  };\r\n\r\n  render() {\r\n    const { value, isDisabled } = this.props;\r\n    return (\r\n      <Row>\r\n        <InputNumber\r\n          min={0}\r\n          max={60}\r\n          style={{ margin: '0 16px' }}\r\n          step={1}\r\n          value={value}\r\n          onChange={this.onChange}\r\n          disabled={isDisabled}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import { Progress } from 'antd';\r\nimport React from 'react';\r\n\r\nexport default (props) => {\r\n  const { percentTime } = props;\r\n  return <Progress type=\"circle\" percent={percentTime} />;\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './Countdown.css';\r\nimport CountdownDisplay from './CountdownDisplay';\r\nimport CountdownInputField from './CountdownInputField';\r\nimport CountdownProgress from './CountdownProgress';\r\n\r\nexport default class Countdown extends React.Component {\r\n  state = {\r\n    minutes: 0,\r\n    seconds: 0,\r\n    totalTime: 0,\r\n    percentTime: 0,\r\n    isPaused: true,\r\n    isDisabled: false,\r\n    isFinish: true,\r\n  };\r\n\r\n  displayMinValue = (value) => {\r\n    return ('00' + value.toString()).split('').slice(-3).join('');\r\n  };\r\n\r\n  displaySecValue = (value) => {\r\n    return ('0' + value.toString()).split('').slice(-2).join('');\r\n  };\r\n\r\n  changeValueMin = (minutes) => {\r\n    this.setState({\r\n      minutes,\r\n    });\r\n  };\r\n\r\n  changeValueSec = (seconds) => {\r\n    this.setState({\r\n      seconds,\r\n    });\r\n  };\r\n\r\n  changeValueFromSlider = (value) => {\r\n    const minutes = Math.floor(value / 60);\r\n    const seconds = value % 60;\r\n    this.setState({\r\n      minutes,\r\n      seconds,\r\n    });\r\n  };\r\n\r\n  handleStart = () => {\r\n    if (this.state.isPaused) {\r\n      this.setState({\r\n        isPaused: false,\r\n      });\r\n      const totalTime = this.state.minutes * 60 + this.state.seconds;\r\n      this.setState({\r\n        totalTime: totalTime,\r\n        isDisabled: true,\r\n        isPaused: false,\r\n      });\r\n      this.timerID = setTimeout(() => this.tick(), 1000);\r\n    } else {\r\n      clearTimeout(this.timerID);\r\n      this.setState({\r\n        isPaused: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.isPaused) {\r\n      clearTimeout(this.timerID);\r\n      return;\r\n    }\r\n    const currentTime = this.state.minutes * 60 + this.state.seconds;\r\n    const percentTime = Math.floor(\r\n      100 - (currentTime * 100) / this.state.totalTime\r\n    );\r\n    this.setState({\r\n      percentTime,\r\n    });\r\n    if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n      clearTimeout(this.timerID);\r\n      this.setState({\r\n        isPaused: true,\r\n        isDisabled: false,\r\n        isFinish: true,\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.seconds === 0) {\r\n      this.setState({\r\n        seconds: 60,\r\n        minutes: this.state.minutes - 1,\r\n      });\r\n    }\r\n    this.setState({\r\n      seconds: this.state.seconds - 1,\r\n    });\r\n    this.timerID = setTimeout(this.tick, 1000);\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      minutes: 0,\r\n      seconds: 0,\r\n      totalTime: 0,\r\n      percentTime: 0,\r\n      isPaused: true,\r\n      isDisabled: false,\r\n      isFinish: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { percentTime, isDisabled } = this.state;\r\n    const valueInputMinutes = this.state.minutes;\r\n    const valueInputSeconds = this.state.seconds;\r\n    const valueSlider = valueInputMinutes * 60 + valueInputSeconds;\r\n    const valueDisplayMinutes = this.displayMinValue(this.state.minutes);\r\n    const valueDisplaySeconds = this.displaySecValue(this.state.seconds);\r\n\r\n    return (\r\n      <div className=\"Countdown-container\">\r\n        <h1>Счетчик обратного времени</h1>\r\n        <div className=\"display-progress-container\">\r\n          <div className=\"diasplay-progress-flex-box\">\r\n            <CountdownDisplay\r\n              min={valueDisplayMinutes}\r\n              sec={valueDisplaySeconds}\r\n            />\r\n          </div>\r\n          <div className=\"diasplay-progress-flex-box\">\r\n            <CountdownProgress percentTime={percentTime} />\r\n          </div>\r\n        </div>\r\n        <div className=\"InputField-buttons-container\">\r\n          <div className=\"InputField-container\">\r\n            <CountdownInputField\r\n              changeValueFromSlider={this.changeValueFromSlider}\r\n              changeMinutes={this.changeValueMin}\r\n              changeSeconds={this.changeValueSec}\r\n              valueInputMinutes={valueInputMinutes}\r\n              valueInputSeconds={valueInputSeconds}\r\n              valueSlider={valueSlider}\r\n              isDisabled={isDisabled}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"btn-container\">\r\n            <div className=\"btn\">\r\n              <Button type=\"primary\" onClick={this.handleStart}>\r\n                Пуск/пауза\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn\">\r\n              <Button type=\"primary\" onClick={this.handleReset}>\r\n                Сбросить\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ClockDisplay.css';\r\n\r\nexport default function ClockDisplay(props) {\r\n  const { currentTime, currentMs } = props;\r\n  return (\r\n    <>\r\n      <h1>Текущее время</h1>\r\n      <div className=\"timerDisplayWrapper\">\r\n        <div className=\"class1\">\r\n          <h1>{currentTime}:</h1>\r\n        </div>\r\n        <div className=\"class2\">\r\n          <h1>{currentMs}</h1>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Clock.css';\r\nimport ClockDisplay from './ClockDisplay';\r\n\r\nexport default class Clock extends React.Component {\r\n  state = {\r\n    currentTime: new Date(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 10);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    const newTime = new Date();\r\n    this.setState({\r\n      currentTime: newTime,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const time = this.state.currentTime;\r\n    const ms = ('00' + time.getMilliseconds().toString())\r\n      .split('')\r\n      .slice(-3)\r\n      .join('');\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <ClockDisplay\r\n          currentTime={this.state.currentTime.toLocaleTimeString()}\r\n          currentMs={ms}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Timer from './components/Timer/Timer';\r\nimport Countdown from './components/Countdown/Countdown';\r\nimport Clock from './components/Clock/Clock';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>Таймеры</h1>\r\n      </header>\r\n      <div className=\"app\">\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"Часы\" key=\"1\">\r\n            <Clock />\r\n          </TabPane>\r\n          <TabPane tab=\"Секундомер\" key=\"2\">\r\n            <Timer />\r\n          </TabPane>\r\n          <TabPane tab=\"Счетчик обратного времени\" key=\"3\">\r\n            <Countdown />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}