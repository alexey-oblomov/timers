{"version":3,"sources":["components/Timer/TimerDisplay.jsx","components/Timer/Timer.jsx","components/Countdown/CountdownDisplay.jsx","components/Countdown/CountdownInputField.jsx","components/Countdown/CountdownProgress.jsx","components/Countdown/Countdown.jsx","components/Clock/ClockDisplay.jsx","components/Clock/Clock.jsx","App.jsx","index.jsx"],"names":["ClockDisplay","props","currentTime","className","Timer","state","hour","minute","second","millisecond","isPaused","handleStart","timerID","setInterval","tick","setState","clearInterval","handleReset","this","time","split","slice","join","type","onClick","React","Component","CountdownDisplay","min","sec","CountdownInputField","funcMin","funcSec","func","Minutes","onChange","value","isNaN","span","max","style","margin","step","Seconds","percent","Countdown","minutes","seconds","displayValue","toString","changeValueMin","changeValueSec","CountdownProgress","currentMs","Clock","Date","newTime","ms","getMilliseconds","toLocaleTimeString","App","TabPane","Tabs","tab","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40501d56.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TimerDisplay.css';\r\n\r\nexport default function ClockDisplay(props) {\r\n  const { currentTime } = props;\r\n  return (\r\n    <div className=\"timerDisplayWrapper\">\r\n      <div className=\"class1\">\r\n        <h1>Секундомер</h1>\r\n        <h1>{currentTime}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './Timer.css';\r\nimport TimerDisplay from './TimerDisplay';\r\n\r\nexport default class Timer extends React.Component {\r\n  state = {\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    millisecond: 0,\r\n    isPaused: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      millisecond: this.state.millisecond + 17,\r\n    });\r\n    if (this.state.millisecond >= 1000) {\r\n      this.setState({\r\n        second: this.state.second + 1,\r\n        millisecond: 0,\r\n      });\r\n    }\r\n    if (this.state.second === 60) {\r\n      this.setState({\r\n        minute: this.state.minute + 1,\r\n        second: 0,\r\n      });\r\n    }\r\n    if (this.state.minute === 60) {\r\n      this.setState({\r\n        hour: this.state.hour + 1,\r\n        minute: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleStart = () => {\r\n    if (this.state.isPaused) {\r\n      this.timerID = setInterval(() => this.tick(), 17);\r\n      this.setState({\r\n        isPaused: false,\r\n      });\r\n    } else {\r\n      clearInterval(this.timerID);\r\n      this.setState({\r\n        isPaused: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n      millisecond: 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { hour, minute, second, millisecond } = this.state;\r\n    const time =\r\n      ('0' + hour).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('0' + minute).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('0' + second).split('').slice(-2).join('') +\r\n      ':' +\r\n      ('00' + millisecond).split('').slice(-3).join('');\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <TimerDisplay currentTime={time} />\r\n        <div className=\"btn-container\">\r\n          <div className=\"btn\">\r\n            <Button type=\"primary\" onClick={this.handleStart}>\r\n              Пуск/пауза\r\n            </Button>\r\n          </div>\r\n          <div className=\"btn\">\r\n            <Button type=\"primary\" onClick={this.handleReset}>\r\n              Сбросить\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './CountdownDisplay.css';\r\n\r\nexport default function CountdownDisplay(props) {\r\n  const { min, sec } = props;\r\n\r\n  return (\r\n    <div className=\"countdownDisplayWrapper\">\r\n      <div className=\"class1\">\r\n        <h1>\r\n          {min}:{sec}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './CountdownInputField.css';\r\nimport React from 'react';\r\nimport { Slider, InputNumber, Row, Col } from 'antd';\r\n\r\nexport default function CountdownInputField(props) {\r\n  const { funcMin, funcSec, min, sec } = props;\r\n  return (\r\n    <>\r\n      <Minutes func={funcMin} min={min} />\r\n      <Seconds func={funcSec} sec={sec} />\r\n    </>\r\n  );\r\n}\r\n\r\nclass Minutes extends React.Component {\r\n  onChange = (value) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    const { func } = this.props;\r\n    func(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col span={12}>\r\n          <Slider\r\n            min={0}\r\n            max={59}\r\n            onChange={this.onChange}\r\n            value={this.props.min}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={59}\r\n            style={{ margin: '0 16px' }}\r\n            value={this.props.min}\r\n            onChange={this.onChange}\r\n            step={1}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nclass Seconds extends React.Component {\r\n  onChange = (value) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    const { func } = this.props;\r\n    func(value);\r\n  };\r\n\r\n  render() {\r\n    const { sec } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col span={12}>\r\n          <Slider\r\n            min={0}\r\n            max={59}\r\n            onChange={this.onChange}\r\n            value={sec}\r\n            step={1}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={59}\r\n            style={{ margin: '0 16px' }}\r\n            step={1}\r\n            value={sec}\r\n            onChange={this.onChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import { Progress } from 'antd';\r\nimport React from 'react';\r\n\r\nexport default () => {\r\n  return <Progress type=\"circle\" percent={1} />;\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './Countdown.css';\r\nimport CountdownDisplay from './CountdownDisplay';\r\nimport CountdownInputField from './CountdownInputField';\r\nimport CountdownProgress from './CountdownProgress';\r\n\r\nexport default class Countdown extends React.Component {\r\n  state = {\r\n    minutes: 0,\r\n    seconds: 0,\r\n  };\r\n\r\n  displayValue = (value) => {\r\n    return ('0' + value.toString()).split('').slice(-2).join('');\r\n  };\r\n\r\n  changeValueMin = (min) => {\r\n    this.setState({\r\n      minutes: min,\r\n    });\r\n  };\r\n\r\n  changeValueSec = (sec) => {\r\n    this.setState({\r\n      seconds: sec,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const min = this.displayValue(this.state.minutes);\r\n    const sec = this.displayValue(this.state.seconds);\r\n\r\n    return (\r\n      <div className=\"Countdown-container\">\r\n        <h1>Счетчик обратного времени</h1>\r\n        <div className=\"display-progress-container\">\r\n          <div className=\"diasplay-progress-flex-box\">\r\n            <CountdownDisplay min={min} sec={sec} />\r\n          </div>\r\n          <div className=\"diasplay-progress-flex-box\">\r\n            <CountdownProgress />\r\n          </div>\r\n        </div>\r\n        <div className=\"InputField-buttons-container\">\r\n          <div className=\"InputField-container\">\r\n            <CountdownInputField\r\n              funcMin={this.changeValueMin}\r\n              min={min}\r\n              sec={sec}\r\n              funcSec={this.changeValueSec}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"btn-container\">\r\n            <div className=\"btn\">\r\n              <Button type=\"primary\">Пуск/пауза</Button>\r\n            </div>\r\n            <div className=\"btn\">\r\n              <Button type=\"primary\">Сбросить</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ClockDisplay.css';\r\n\r\nexport default function ClockDisplay(props) {\r\n  const { currentTime, currentMs } = props;\r\n  return (\r\n    <>\r\n      <h1>Текущее время</h1>\r\n      <div className=\"timerDisplayWrapper\">\r\n        <div className=\"class1\">\r\n          <h1>{currentTime}:</h1>\r\n        </div>\r\n        <div className=\"class2\">\r\n          <h1>{currentMs}</h1>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Clock.css';\r\nimport ClockDisplay from './ClockDisplay';\r\n\r\nexport default class Clock extends React.Component {\r\n  state = {\r\n    currentTime: new Date(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 10);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    const newTime = new Date();\r\n    this.setState({\r\n      currentTime: newTime,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const time = this.state.currentTime;\r\n    const ms = ('00' + time.getMilliseconds().toString())\r\n      .split('')\r\n      .slice(-3)\r\n      .join('');\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <ClockDisplay\r\n          currentTime={this.state.currentTime.toLocaleTimeString()}\r\n          currentMs={ms}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Timer from './components/Timer/Timer';\r\nimport Countdown from './components/Countdown/Countdown';\r\nimport Clock from './components/Clock/Clock';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const { TabPane } = Tabs;\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>Таймеры</h1>\r\n      </header>\r\n      <div className=\"app\">\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"Часы\" key=\"1\">\r\n            <Clock />\r\n          </TabPane>\r\n          <TabPane tab=\"Секундомер\" key=\"2\">\r\n            <Timer />\r\n          </TabPane>\r\n          <TabPane tab=\"Счетчик обратного времени\" key=\"3\">\r\n            <Countdown />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}